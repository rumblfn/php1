<?php
    $a = 5;
    $b = '05';
    var_dump($a == $b);         // Почему true?
    var_dump((int) '012345');     // Почему 12345?
    var_dump((float)123.0 === (int)123.0); // Почему false?
    var_dump((int)0 === (int)'hello, world'); // Почему true?

    // var_dump - выводит информацию о переменной

    // 1.
    // php - язык со слабой типизацией
    // == равно после преобразования типов
    // php страается преобразовать выражение если это разумно
    var_dump($a === $b); // false, typeof(a) != typeof(b)
    // === строгое сравнение без преобразования типов

    // 2.
    // int - преобразовало значение '012345' к целым
    // var_dump((arg) '012345'); arg - тип, в котором необходимо вывести
    // другими словами - оно преобразует значение в нужный тип
    var_dump((float) '012345');
    var_dump((boolean) '012345');
    var_dump((int) 'abcd');

    // 3.
    // === проверяет на соответствие типов
    // как и было описано в 1 задании

    // 4.
    // int(0) имеет тот же тип после преобразования строки в int
    // но так как в строке 'hello, world' в начале не встрилась ни одна цифра оно преобразовалось в пустое
    // пустое - ноль
    var_dump((int)'hello, world9');
    var_dump((int)'9hello, world');
    // то есть int(value) берет все цифры до первой буквы
    // но до первой буквы h цифр нет, поэтому осталось пустое значение, '' -> false -> 0
    
?>